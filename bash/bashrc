#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return
set -o vi
stty -ixon # Disable ctrl-s and ctrl-q.
complete -cf sudo # Tab complete for sudo

# shopt options
shopt -s autocd # This automatically add the cd command.
shopt -s histappend # Append to history rather than overwrite
shopt -s checkwinsize # Check window after each command
shopt -s dotglob # files beginning with . to be returned in the results of path-name expansion.


# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}
export PS1="\[$(tput bold)\]\[$(tput setaf 1)\][\[$(tput setaf 3)\]\u\[$(tput setaf 2)\]@\[$(tput setaf 4)\]\h \[$(tput setaf 5)\]\W\[$(tput setaf 1)\]]\`parse_git_branch\`\[\e[m\]\\[$(tput setaf 6)\]\$ \[$(tput sgr0)\]"

alias journalctl='sudo journalctl'
alias pacrepo='sudo reflector -l 20 -f 10 --save /etc/pacman.d/mirrorlist'
alias pacman='sudo pacman'
alias upgrade='sudo pacman -Syu'
alias install='sudo pacman -S'
alias delete='sudo pacman -Rs'
alias search='sudo pacman -Ss'
alias auru='yaourt -Syua --noconfirm'
alias systemctl='sudo systemctl'
alias se='ls /usr/bin | grep'
alias files='ranger'

export EDITOR=nvim
export QT_STYLE_OVERRIDE=gtk
export QT_SELECT=qt5
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

if [[ $LANG = '' ]]; then
	export LANG=se_SE.UTF-8
fi

# Directory handling
alias d="dirs -v"
alias 1="pushd +1"
alias 2="pushd +2"
alias 3="pushd +3"
alias 4="pushd +4"
alias 5="pushd +5"
alias 6="pushd +6"
alias 7="pushd +7"
alias 8="pushd +8"
alias 9="pushd +9"
alias sd="pushd "$@""
alias ed="dirs -c"
function lcd {
  builtin cd "$@" && ls -l
}

function gf {
  if [[ -z "$@" ]] ; then
    git ls-files
  else
    if [[ "$#" -lt 2 ]] ; then
      git ls-files | grep "$1"
    else
      git ls-files "$2" | grep "$1"
    fi
  fi
}

function gg {
  if [[ -z "$@" ]] ; then
    # Display usage of function
    echo "Usage of gg <string> <path>"
  else
    if [[ "$#" -lt 2 ]] ; then
      git grep -i "$1" .
    else
      git grep -i "$1" "$2"
    fi
  fi
}


alias h="history"
alias j="jobs -l"
alias ll="ls -lh"
alias ls='ls --color=auto'
alias n='nvim'
if [ "x$TERM" = "xxterm" ]
then
    export TERM="xterm-256color"
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
